{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nexport default async function login(e) {\n  var data;\n  let response = await fetch('http://localhost:2000/api/token/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'email': e.target.email.value,\n      'password': e.target.password.value\n    })\n  }).then(res => {\n    data = res.json();\n    console.log('data', data);\n  }).catch(ERR);\n  if (data.status === 200) {\n    const data = await response.json();\n    localStorage.setItem('authToken', JSON.stringify(data));\n    toast.success('Login Success');\n    return data;\n  } else {\n    toast.error('Invalid User Credential');\n    throw new Error('Invalid User Credential'); // Optionally, throw an error to handle it outside the function.\n  }\n}\n\nexport function getLocal() {\n  let response = localStorage.getItem('authToken');\n  return response;\n}","map":{"version":3,"names":["toast","login","e","data","response","fetch","method","headers","body","JSON","stringify","target","email","value","password","then","res","json","console","log","catch","ERR","status","localStorage","setItem","success","error","Error","getLocal","getItem"],"sources":["C:/Users/MOHAMMED SHAHID KM/Desktop/brototype/python/React-django-mini-application/frontend/src/helpers/auth.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n\r\nexport default async function login(e){\r\n    var data;\r\n    let response = await fetch('http://localhost:2000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body: JSON.stringify({'email': e.target.email.value, 'password': e.target.password.value})\r\n            }).then((res)=>{\r\n\r\n\r\n                data =res.json()\r\n                console.log('data',data)\r\n            }\r\n            ).catch(ERR)\r\n\r\n            if (data.status === 200) {\r\n                const data = await response.json();\r\n                localStorage.setItem('authToken', JSON.stringify(data));\r\n                toast.success('Login Success');\r\n                return data;\r\n              } else {\r\n                toast.error('Invalid User Credential');\r\n                throw new Error('Invalid User Credential'); // Optionally, throw an error to handle it outside the function.\r\n              }\r\n            \r\n  }\r\n\r\n\r\nexport function getLocal(){\r\n    let response = localStorage.getItem('authToken');\r\n    return response;\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AAEvC,eAAe,eAAeC,KAAKA,CAACC,CAAC,EAAC;EAClC,IAAIC,IAAI;EACR,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAC,OAAO,EAAER,CAAC,CAACS,MAAM,CAACC,KAAK,CAACC,KAAK;MAAE,UAAU,EAAEX,CAAC,CAACS,MAAM,CAACG,QAAQ,CAACD;IAAK,CAAC;EAC7F,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAG;IAGXb,IAAI,GAAEa,GAAG,CAACC,IAAI,CAAC,CAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAChB,IAAI,CAAC;EAC5B,CACA,CAAC,CAACiB,KAAK,CAACC,GAAG,CAAC;EAEZ,IAAIlB,IAAI,CAACmB,MAAM,KAAK,GAAG,EAAE;IACrB,MAAMnB,IAAI,GAAG,MAAMC,QAAQ,CAACa,IAAI,CAAC,CAAC;IAClCM,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEf,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;IACvDH,KAAK,CAACyB,OAAO,CAAC,eAAe,CAAC;IAC9B,OAAOtB,IAAI;EACb,CAAC,MAAM;IACLH,KAAK,CAAC0B,KAAK,CAAC,yBAAyB,CAAC;IACtC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;EAC9C;AAEZ;;AAGF,OAAO,SAASC,QAAQA,CAAA,EAAE;EACtB,IAAIxB,QAAQ,GAAGmB,YAAY,CAACM,OAAO,CAAC,WAAW,CAAC;EAChD,OAAOzB,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}